#!/usr/bin/env bash

WORKERS_COUNT=2

if [ ! -z $1 ] && [ -d $1 ]; then
	BASE_IMAGE_NAME="astronomerinc/ap-airflow"
	REQUIREMENTS="$1/.astro/requirements.txt"
	PACKAGES="$1/.astro/packages.txt"
	DOCKERFILE="$1/Dockerfile.astro"

	# Create .astro dir
	mkdir -p "${1}/.astro"

	# Create default dockerfile using onbuild image as base
	if [ ! -f $DOCKERFILE ]; then
		echo "FROM ${BASE_IMAGE_NAME}:latest-onbuild" >> $DOCKERFILE
	fi

	# Create default requirements.txt
	if [ ! -f $REQUIREMENTS ]; then
		echo "noop==1.0.0" >> $REQUIREMENTS
	fi

	# Create default packages.txt
	if [ ! -f $PACKAGES ]; then
		touch $PACKAGES
	fi

	# Build astronomerio/airflow:DIR_NAME image
	DIR_NAME=`echo ${1%/} | rev | awk -F \/ '{print $1}' | rev`
	BUILD_ARGS="--build-arg BASE_PATH=.astro"
	docker build ${BUILD_ARGS} -t "${BASE_IMAGE_NAME}:${DIR_NAME}" -f ${DOCKERFILE} $1 || exit 1

	# If we have an enhanced image built, specify tag here and use it
	if [ -f $REQUIREMENTS ] || [ -f $PACKAGES ]; then
		export AIRFLOW_HOME=$1
		export AIRFLOW_IMAGE_TAG=${DIR_NAME}
		docker-compose up -d --scale worker=${WORKERS_COUNT}
	else
		echo "$1 has no packages or requirements, skipping build."
		export AIRFLOW_HOME=$1
		docker-compose up -d --scale worker=${WORKERS_COUNT}
	fi
else
	echo "No valid directory specified, starting an empty Airflow..."
	docker-compose up -d --scale worker=${WORKERS_COUNT}
fi

printf "
Airflow webserver running at http://localhost:8080
Flower (Celery Monitoring) running at http://localhost:5555
Grafana dashboard running at http://localhost:3000
Prometheus UI running at http://localhost:9090\n
Execute ./pause to stop containers and keep all data.
Execute ./kill to stop containers and remove all data.\n
"
