---
version: "2"

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

services:
  postgres:
    image: postgres:9.6
    restart: always
    labels:
      io.astronomer.docker: "true"
    env_file:
      - ../config/postgres.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:4.0.2
    restart: always
    labels:
      io.astronomer.docker: "true"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  scheduler:
    image: astronomerinc/ap-airflow:$AIRFLOW_IMAGE_TAG
    command: airflow scheduler
    restart: always
    user: airflow
    labels:
      io.astronomer.docker: "true"
    depends_on:
      - postgres
      - redis
      - statsd-exporter
    env_file:
      - ../config/airflow.env
    volumes:
      - $AIRFLOW_HOME/dags:/home/airflow/dags:ro
      - $AIRFLOW_HOME/plugins:/home/airflow/plugins:ro

  webserver:
    image: astronomerinc/ap-airflow:$AIRFLOW_IMAGE_TAG
    command: airflow webserver
    restart: always
    user: airflow
    labels:
      io.astronomer.docker: "true"
    depends_on:
      - scheduler # Wait for scheduler to avoid race to init db in entrypoint.sh
      - postgres
      - redis
    env_file:
      - ../config/airflow.env
    ports:
      - "8080:8080"
    volumes:
      - $AIRFLOW_HOME/dags:/home/airflow/dags:ro
      - $AIRFLOW_HOME/plugins:/home/airflow/plugins:ro

  worker:
    image: astronomerinc/ap-airflow:$AIRFLOW_IMAGE_TAG
    command: airflow worker
    restart: always
    user: airflow
    labels:
      io.astronomer.docker: "true"
    depends_on:
      - postgres
      - redis
      - scheduler
    env_file:
      - ../config/airflow.env
    volumes:
      - $AIRFLOW_HOME/dags:/home/airflow/dags:ro
      - $AIRFLOW_HOME/plugins:/home/airflow/plugins:ro

  flower:
    image: astronomerinc/ap-airflow:$AIRFLOW_IMAGE_TAG
    command: airflow flower
    restart: always
    user: airflow
    labels:
      io.astronomer.docker: "true"
    depends_on:
      - postgres
      - redis
    env_file:
      - ../config/airflow.env
    ports:
      - "5555:5555"

  statsd-exporter:
    image: prom/statsd-exporter
    command:
      - "-statsd.mapping-config=/tmp/statsd-exporter.yml"
    restart: always
    depends_on:
      - prometheus
    labels:
      io.astronomer.docker: "true"
    volumes:
      - ../config/statsd-exporter.yml:/tmp/statsd-exporter.yml:ro
    ports:
      - "9102:9102"

  prometheus:
    image: prom/prometheus
    command:
      - "--config.file=/tmp/prom.yml"
      - "--storage.tsdb.path=/prometheus"
    restart: always
    labels:
      io.astronomer.docker: "true"
    ports:
      - "9090:9090"
      - "8125:8125"
    volumes:
      - ../config/prom.yml:/tmp/prom.yml:ro
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:master
    restart: always
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
    depends_on:
      - prometheus
    labels:
      io.astronomer.docker: "true"
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ../config/datasource.yml:/usr/share/grafana/conf/provisioning/datasources/datasource.yml
      - ../config/dashboard.yml:/usr/share/grafana/conf/provisioning/dashboards/dashboard.yml
      - ../config/dashboard.json:/var/lib/grafana/dashboards/dashboard.json
